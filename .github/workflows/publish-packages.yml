name: Publish NuGet Packages

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Package version (e.g. 1.2.3 or 1.2.3-beta)"
        required: true
        type: string
  release:
    types: [published]

env:
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

jobs:
  pack-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Determine package version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "release" ]; then
            TAG="${{ github.event.release.tag_name }}"
            VERSION="${TAG#v}"
          else
            VERSION="${{ github.event.inputs.version }}"
            VERSION="${VERSION#v}"
          fi
          if [ -z "$VERSION" ]; then
            echo "Unable to determine version" >&2
            exit 1
          fi
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Build Snowball sources
        run: |
          cd ext/snowball
          make dist_libstemmer_csharp

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            9.0.x
            8.0.x
          include-prerelease: true

      - name: Restore
        run: dotnet restore LexiDiff.sln

      - name: Clean package output
        run: |
          if [ -d artifacts/packages ]; then
            rm -rf artifacts/packages
          fi

      - name: Pack
        run: dotnet pack LexiDiff.sln --configuration Release --no-restore -p:Version=${{ steps.version.outputs.version }}

      - name: Push packages to NuGet
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          if [ -z "$NUGET_API_KEY" ]; then
            echo 'NUGET_API_KEY secret is not set.' >&2
            exit 1
          fi
          dotnet nuget push artifacts/packages/*.nupkg --source https://api.nuget.org/v3/index.json --api-key "$NUGET_API_KEY" --skip-duplicate
